{
  "functions": [
    {
      "comments": [], 
      "signature": "undefined _average_score()", 
      "local_variables": [
        {
          "storage": "Stack[-0x8]:8", 
          "datatype": "undefined8", 
          "name": "local_8"
        }, 
        {
          "storage": "Stack[-0xc]:4", 
          "datatype": "undefined4", 
          "name": "local_c"
        }, 
        {
          "storage": "Stack[-0x10]:4", 
          "datatype": "undefined4", 
          "name": "local_10"
        }, 
        {
          "storage": "Stack[-0x18]:8", 
          "datatype": "undefined8", 
          "name": "local_18"
        }
      ], 
      "global_variables": [], 
      "entry": "0x100000460L", 
      "strings": [], 
      "pseudocode": "\nint _average_score(long param_1)\n\n{\n  undefined4 local_10;\n  undefined4 local_c;\n  \n  local_c = 0;\n  for (local_10 = 0; local_10 < 3; local_10 = local_10 + 1) {\n    local_c = local_c + *(int *)(param_1 + 0x18 + (long)local_10 * 4);\n  }\n  return local_c / 3;\n}\n\n", 
      "name": "_average_score", 
      "parameters": []
    }, 
    {
      "comments": [], 
      "signature": "undefined _greet_user()", 
      "local_variables": [
        {
          "storage": "Stack[-0x10]:8", 
          "datatype": "undefined8", 
          "name": "local_10"
        }, 
        {
          "storage": "Stack[-0x18]:8", 
          "datatype": "undefined8", 
          "name": "local_18"
        }, 
        {
          "storage": "Stack[-0x48]:8", 
          "datatype": "undefined8", 
          "name": "local_48"
        }, 
        {
          "storage": "Stack[-0x50]:8", 
          "datatype": "undefined8", 
          "name": "local_50"
        }, 
        {
          "storage": "Stack[-0x58]:8", 
          "datatype": "undefined8", 
          "name": "local_58"
        }, 
        {
          "storage": "Stack[-0x60]:8", 
          "datatype": "undefined8", 
          "name": "local_60"
        }
      ], 
      "global_variables": [
        {
          "address": "100004008", 
          "name": "PTR____stack_chk_guard_100004008"
        }, 
        {
          "address": "10000c000", 
          "name": "___stack_chk_guard"
        }, 
        {
          "address": "100004008", 
          "name": "PTR____stack_chk_guard_100004008"
        }, 
        {
          "address": "10000c000", 
          "name": "___stack_chk_guard"
        }
      ], 
      "entry": "0x1000004ccL", 
      "strings": [], 
      "pseudocode": "\nvoid _greet_user(void *param_1)\n\n{\n  int iVar1;\n  undefined1 auStack_3c [36];\n  long local_18;\n  \n  local_18 = *(long *)PTR____stack_chk_guard_100004008;\n  _printf(\"Hello %s (age %d)!\\n\");\n  _memcpy(auStack_3c,param_1,0x24);\n  _average_score(auStack_3c);\n  iVar1 = _printf(\"Your average score is: %d\\n\");\n  if (*(long *)PTR____stack_chk_guard_100004008 - local_18 != 0) {\n                    /* WARNING: Subroutine does not return */\n    ___stack_chk_fail(*(long *)PTR____stack_chk_guard_100004008 - local_18,iVar1);\n  }\n  return;\n}\n\n", 
      "name": "_greet_user", 
      "parameters": []
    }, 
    {
      "comments": [], 
      "signature": "undefined entry()", 
      "local_variables": [
        {
          "storage": "Stack[-0x10]:8", 
          "datatype": "undefined8", 
          "name": "local_10"
        }, 
        {
          "storage": "Stack[-0x18]:8", 
          "datatype": "undefined8", 
          "name": "local_18"
        }, 
        {
          "storage": "Stack[-0x1c]:4", 
          "datatype": "undefined4", 
          "name": "local_1c"
        }, 
        {
          "storage": "Stack[-0x20]:4", 
          "datatype": "undefined4", 
          "name": "local_20"
        }, 
        {
          "storage": "Stack[-0x24]:4", 
          "datatype": "undefined4", 
          "name": "local_24"
        }, 
        {
          "storage": "Stack[-0x28]:4", 
          "datatype": "undefined4", 
          "name": "local_28"
        }, 
        {
          "storage": "Stack[-0x40]:4", 
          "datatype": "undefined4", 
          "name": "local_40"
        }, 
        {
          "storage": "Stack[-0x44]:4", 
          "datatype": "undefined4", 
          "name": "local_44"
        }, 
        {
          "storage": "Stack[-0x48]:4", 
          "datatype": "undefined4", 
          "name": "local_48"
        }, 
        {
          "storage": "Stack[-0x50]:8", 
          "datatype": "undefined8", 
          "name": "local_50"
        }
      ], 
      "global_variables": [
        {
          "address": "100004008", 
          "name": "PTR____stack_chk_guard_100004008"
        }, 
        {
          "address": "10000c000", 
          "name": "___stack_chk_guard"
        }, 
        {
          "address": "100004008", 
          "name": "PTR____stack_chk_guard_100004008"
        }, 
        {
          "address": "10000c000", 
          "name": "___stack_chk_guard"
        }
      ], 
      "entry": "0x100000570L", 
      "strings": [], 
      "pseudocode": "\n/* WARNING: Removing unreachable block (ram,0x0001000005f8) */\n/* WARNING: Removing unreachable block (ram,0x0001000005fc) */\n\nundefined8 entry(void)\n\n{\n  int iVar1;\n  undefined1 auStack_3c [20];\n  undefined4 local_28;\n  undefined4 local_24;\n  undefined4 local_20;\n  undefined4 local_1c;\n  long local_18;\n  \n  local_18 = *(long *)PTR____stack_chk_guard_100004008;\n  ___strcpy_chk(auStack_3c,\"Alice\",0x14);\n  local_28 = 0x1c;\n  local_24 = 0x55;\n  local_20 = 0x5a;\n  local_1c = 0x5f;\n  _greet_user(auStack_3c);\n  iVar1 = _printf(\"Option 2 selected.\\n\",0);\n  if (*(long *)PTR____stack_chk_guard_100004008 - local_18 == 0) {\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  ___stack_chk_fail(*(long *)PTR____stack_chk_guard_100004008 - local_18,iVar1);\n}\n\n", 
      "name": "entry", 
      "parameters": []
    }, 
    {
      "comments": [], 
      "signature": "undefined ___stack_chk_fail()", 
      "local_variables": [], 
      "global_variables": [
        {
          "address": "100004000", 
          "name": "PTR____stack_chk_fail_100004000"
        }
      ], 
      "entry": "0x10000065cL", 
      "strings": [], 
      "pseudocode": "\nvoid ___stack_chk_fail(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x000100000664. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR____stack_chk_fail_100004000)();\n  return;\n}\n\n", 
      "name": "___stack_chk_fail", 
      "parameters": []
    }, 
    {
      "comments": [], 
      "signature": "undefined ___strcpy_chk()", 
      "local_variables": [], 
      "global_variables": [
        {
          "address": "100004010", 
          "name": "PTR____strcpy_chk_100004010"
        }
      ], 
      "entry": "0x100000668L", 
      "strings": [], 
      "pseudocode": "\nvoid ___strcpy_chk(void)\n\n{\n                    /* WARNING: Could not recover jumptable at 0x000100000670. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR____strcpy_chk_100004010)();\n  return;\n}\n\n", 
      "name": "___strcpy_chk", 
      "parameters": []
    }, 
    {
      "comments": [], 
      "signature": "void * _memcpy(void * param_1, void * param_2, size_t param_3)", 
      "local_variables": [], 
      "global_variables": [
        {
          "address": "100004018", 
          "name": "PTR__memcpy_100004018"
        }
      ], 
      "entry": "0x100000674L", 
      "strings": [], 
      "pseudocode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * _memcpy(void *param_1,void *param_2,size_t param_3)\n\n{\n  void *pvVar1;\n  \n                    /* WARNING: Could not recover jumptable at 0x00010000067c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  pvVar1 = (void *)(*(code *)PTR__memcpy_100004018)();\n  return pvVar1;\n}\n\n", 
      "name": "_memcpy", 
      "parameters": [
        {
          "storage": "x0:8", 
          "datatype": "void *", 
          "name": "param_1"
        }, 
        {
          "storage": "x1:8", 
          "datatype": "void *", 
          "name": "param_2"
        }, 
        {
          "storage": "x2:8", 
          "datatype": "typedef size_t __darwin_size_t", 
          "name": "param_3"
        }
      ]
    }, 
    {
      "comments": [], 
      "signature": "int _printf(char * param_1, ...)", 
      "local_variables": [], 
      "global_variables": [
        {
          "address": "100004020", 
          "name": "PTR__printf_100004020"
        }
      ], 
      "entry": "0x100000680L", 
      "strings": [], 
      "pseudocode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint _printf(char *param_1,...)\n\n{\n  int iVar1;\n  \n                    /* WARNING: Could not recover jumptable at 0x000100000688. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  iVar1 = (*(code *)PTR__printf_100004020)((int)param_1);\n  return iVar1;\n}\n\n", 
      "name": "_printf", 
      "parameters": [
        {
          "storage": "x0:8", 
          "datatype": "char *", 
          "name": "param_1"
        }
      ]
    }
  ], 
  "program": "calc", 
  "data_types": {
    "structures": [
      {
        "length": 8, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "tool"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "version"
          }
        ], 
        "name": "build_tool_version"
      }, 
      {
        "length": 32, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "dword", 
            "name": "platform"
          }, 
          {
            "offset": 12, 
            "datatype": "dword", 
            "name": "minos"
          }, 
          {
            "offset": 16, 
            "datatype": "dword", 
            "name": "sdk"
          }, 
          {
            "offset": 20, 
            "datatype": "dword", 
            "name": "ntools"
          }, 
          {
            "offset": 24, 
            "datatype": "build_tool_version[1]", 
            "name": "build_tool_version[]"
          }
        ], 
        "name": "build_version_command"
      }, 
      {
        "length": 8, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "type"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "offset"
          }
        ], 
        "name": "CS_BlobIndex"
      }, 
      {
        "length": 88, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "magic"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "length"
          }, 
          {
            "offset": 8, 
            "datatype": "dword", 
            "name": "version"
          }, 
          {
            "offset": 12, 
            "datatype": "dword", 
            "name": "flags"
          }, 
          {
            "offset": 16, 
            "datatype": "dword", 
            "name": "hashOffset"
          }, 
          {
            "offset": 20, 
            "datatype": "dword", 
            "name": "identOffset"
          }, 
          {
            "offset": 24, 
            "datatype": "dword", 
            "name": "nSpecialSlots"
          }, 
          {
            "offset": 28, 
            "datatype": "dword", 
            "name": "nCodeSlots"
          }, 
          {
            "offset": 32, 
            "datatype": "dword", 
            "name": "codeLimit"
          }, 
          {
            "offset": 36, 
            "datatype": "byte", 
            "name": "hashSize"
          }, 
          {
            "offset": 37, 
            "datatype": "byte", 
            "name": "hashType"
          }, 
          {
            "offset": 38, 
            "datatype": "byte", 
            "name": "platform"
          }, 
          {
            "offset": 39, 
            "datatype": "byte", 
            "name": "pageSize"
          }, 
          {
            "offset": 40, 
            "datatype": "dword", 
            "name": "spare2"
          }, 
          {
            "offset": 44, 
            "datatype": "dword", 
            "name": "scatterOffset"
          }, 
          {
            "offset": 48, 
            "datatype": "dword", 
            "name": "teamOffset"
          }, 
          {
            "offset": 52, 
            "datatype": "dword", 
            "name": "spare3"
          }, 
          {
            "offset": 56, 
            "datatype": "qword", 
            "name": "codeLimit64"
          }, 
          {
            "offset": 64, 
            "datatype": "qword", 
            "name": "execSegBase"
          }, 
          {
            "offset": 72, 
            "datatype": "qword", 
            "name": "execSegLimit"
          }, 
          {
            "offset": 80, 
            "datatype": "qword", 
            "name": "execSegFlags"
          }
        ], 
        "name": "CS_CodeDirectory"
      }, 
      {
        "length": 20, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "magic"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "length"
          }, 
          {
            "offset": 8, 
            "datatype": "dword", 
            "name": "count"
          }, 
          {
            "offset": 12, 
            "datatype": "CS_BlobIndex[1]", 
            "name": "index"
          }
        ], 
        "name": "CS_SuperBlob"
      }, 
      {
        "length": 16, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "dword", 
            "name": "dataoff"
          }, 
          {
            "offset": 12, 
            "datatype": "dword", 
            "name": "datasize"
          }
        ], 
        "name": "dyld_chained_fixups_command"
      }, 
      {
        "length": 28, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "fixups_version"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "starts_offset"
          }, 
          {
            "offset": 8, 
            "datatype": "dword", 
            "name": "imports_offset"
          }, 
          {
            "offset": 12, 
            "datatype": "dword", 
            "name": "symbols_offset"
          }, 
          {
            "offset": 16, 
            "datatype": "dword", 
            "name": "imports_count"
          }, 
          {
            "offset": 20, 
            "datatype": "dword", 
            "name": "imports_format"
          }, 
          {
            "offset": 24, 
            "datatype": "dword", 
            "name": "symbols_format"
          }
        ], 
        "name": "dyld_chained_fixups_header"
      }, 
      {
        "length": 4, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword:8(storage:1,bitOffset:0)", 
            "name": "lib_ordinal"
          }, 
          {
            "offset": 1, 
            "datatype": "dword:1(storage:1,bitOffset:0)", 
            "name": "weak_import"
          }, 
          {
            "offset": 1, 
            "datatype": "dword:23(storage:3,bitOffset:1)", 
            "name": "name_offset"
          }
        ], 
        "name": "dyld_chained_import"
      }, 
      {
        "length": 20, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "seg_count"
          }, 
          {
            "offset": 4, 
            "datatype": "dword[4]", 
            "name": "seg_info_offset"
          }
        ], 
        "name": "dyld_chained_starts_in_image"
      }, 
      {
        "length": 24, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "size"
          }, 
          {
            "offset": 4, 
            "datatype": "word", 
            "name": "page_size"
          }, 
          {
            "offset": 6, 
            "datatype": "word", 
            "name": "pointer_format"
          }, 
          {
            "offset": 8, 
            "datatype": "IBO64DataType: typedef ImageBaseOffset64 pointer64", 
            "name": "segment_offset"
          }, 
          {
            "offset": 16, 
            "datatype": "dword", 
            "name": "max_valid_pointer"
          }, 
          {
            "offset": 20, 
            "datatype": "word", 
            "name": "page_count"
          }, 
          {
            "offset": 22, 
            "datatype": "word[1]", 
            "name": "page_starts"
          }
        ], 
        "name": "dyld_chained_starts_in_segment"
      }, 
      {
        "length": 16, 
        "members": [
          {
            "offset": 0, 
            "datatype": "/MachO/lc_str\npack(disabled)\nStructure lc_str {\n   0   dword   4   offset   \"\"\n}\nLength: 4 Alignment: 1\n", 
            "name": "name"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "timestamp"
          }, 
          {
            "offset": 8, 
            "datatype": "dword", 
            "name": "current_version"
          }, 
          {
            "offset": 12, 
            "datatype": "dword", 
            "name": "compatibility_version"
          }
        ], 
        "name": "dylib"
      }, 
      {
        "length": 24, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "/MachO/dylib\npack(disabled)\nStructure dylib {\n   0   lc_str   4   name   \"\"\n   4   dword   4   timestamp   \"\"\n   8   dword   4   current_version   \"\"\n   12   dword   4   compatibility_version   \"\"\n}\nLength: 16 Alignment: 1\n", 
            "name": "dylib"
          }
        ], 
        "name": "dylib_command"
      }, 
      {
        "length": 12, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "/MachO/lc_str\npack(disabled)\nStructure lc_str {\n   0   dword   4   offset   \"\"\n}\nLength: 4 Alignment: 1\n", 
            "name": "name"
          }
        ], 
        "name": "dylinker_command"
      }, 
      {
        "length": 80, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "dword", 
            "name": "ilocalsym"
          }, 
          {
            "offset": 12, 
            "datatype": "dword", 
            "name": "nlocalsym"
          }, 
          {
            "offset": 16, 
            "datatype": "dword", 
            "name": "iextdefsym"
          }, 
          {
            "offset": 20, 
            "datatype": "dword", 
            "name": "nextdefsym"
          }, 
          {
            "offset": 24, 
            "datatype": "dword", 
            "name": "iundefsym"
          }, 
          {
            "offset": 28, 
            "datatype": "dword", 
            "name": "nundefsym"
          }, 
          {
            "offset": 32, 
            "datatype": "dword", 
            "name": "tocoff"
          }, 
          {
            "offset": 36, 
            "datatype": "dword", 
            "name": "ntoc"
          }, 
          {
            "offset": 40, 
            "datatype": "dword", 
            "name": "modtaboff"
          }, 
          {
            "offset": 44, 
            "datatype": "dword", 
            "name": "nmodtab"
          }, 
          {
            "offset": 48, 
            "datatype": "dword", 
            "name": "extrefsymoff"
          }, 
          {
            "offset": 52, 
            "datatype": "dword", 
            "name": "nextrefsyms"
          }, 
          {
            "offset": 56, 
            "datatype": "dword", 
            "name": "indirectsymoff"
          }, 
          {
            "offset": 60, 
            "datatype": "dword", 
            "name": "nindirectsyms"
          }, 
          {
            "offset": 64, 
            "datatype": "dword", 
            "name": "extreloff"
          }, 
          {
            "offset": 68, 
            "datatype": "dword", 
            "name": "nextrel"
          }, 
          {
            "offset": 72, 
            "datatype": "dword", 
            "name": "locreloff"
          }, 
          {
            "offset": 76, 
            "datatype": "dword", 
            "name": "nlocrel"
          }
        ], 
        "name": "dysymtab_command"
      }, 
      {
        "length": 24, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "qword", 
            "name": "entryoff"
          }, 
          {
            "offset": 16, 
            "datatype": "qword", 
            "name": "stacksize"
          }
        ], 
        "name": "entry_point_command"
      }, 
      {
        "length": 4, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "offset"
          }
        ], 
        "name": "lc_str"
      }, 
      {
        "length": 16, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "dword", 
            "name": "dataoff"
          }, 
          {
            "offset": 12, 
            "datatype": "dword", 
            "name": "datasize"
          }
        ], 
        "name": "linkedit_data_command"
      }, 
      {
        "length": 32, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "magic"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cputype"
          }, 
          {
            "offset": 8, 
            "datatype": "dword", 
            "name": "cpusubtype"
          }, 
          {
            "offset": 12, 
            "datatype": "dword", 
            "name": "filetype"
          }, 
          {
            "offset": 16, 
            "datatype": "dword", 
            "name": "ncmds"
          }, 
          {
            "offset": 20, 
            "datatype": "dword", 
            "name": "sizeofcmds"
          }, 
          {
            "offset": 24, 
            "datatype": "dword", 
            "name": "flags"
          }, 
          {
            "offset": 28, 
            "datatype": "dword", 
            "name": "reserved"
          }
        ], 
        "name": "mach_header"
      }, 
      {
        "length": 16, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "n_strx"
          }, 
          {
            "offset": 4, 
            "datatype": "byte", 
            "name": "n_type"
          }, 
          {
            "offset": 5, 
            "datatype": "byte", 
            "name": "n_sect"
          }, 
          {
            "offset": 6, 
            "datatype": "word", 
            "name": "n_desc"
          }, 
          {
            "offset": 8, 
            "datatype": "qword", 
            "name": "n_value"
          }
        ], 
        "name": "nlist"
      }, 
      {
        "length": 80, 
        "members": [
          {
            "offset": 0, 
            "datatype": "string", 
            "name": "sectname"
          }, 
          {
            "offset": 16, 
            "datatype": "string", 
            "name": "segname"
          }, 
          {
            "offset": 32, 
            "datatype": "qword", 
            "name": "addr"
          }, 
          {
            "offset": 40, 
            "datatype": "qword", 
            "name": "size"
          }, 
          {
            "offset": 48, 
            "datatype": "dword", 
            "name": "offset"
          }, 
          {
            "offset": 52, 
            "datatype": "dword", 
            "name": "align"
          }, 
          {
            "offset": 56, 
            "datatype": "dword", 
            "name": "reloff"
          }, 
          {
            "offset": 60, 
            "datatype": "dword", 
            "name": "nrelocs"
          }, 
          {
            "offset": 64, 
            "datatype": "dword", 
            "name": "flags"
          }, 
          {
            "offset": 68, 
            "datatype": "dword", 
            "name": "reserved1"
          }, 
          {
            "offset": 72, 
            "datatype": "dword", 
            "name": "reserved2"
          }, 
          {
            "offset": 76, 
            "datatype": "dword", 
            "name": "reserved3"
          }
        ], 
        "name": "section"
      }, 
      {
        "length": 72, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "string", 
            "name": "segname"
          }, 
          {
            "offset": 24, 
            "datatype": "qword", 
            "name": "vmaddr"
          }, 
          {
            "offset": 32, 
            "datatype": "qword", 
            "name": "vmsize"
          }, 
          {
            "offset": 40, 
            "datatype": "qword", 
            "name": "fileoff"
          }, 
          {
            "offset": 48, 
            "datatype": "qword", 
            "name": "filesize"
          }, 
          {
            "offset": 56, 
            "datatype": "dword", 
            "name": "maxprot"
          }, 
          {
            "offset": 60, 
            "datatype": "dword", 
            "name": "initprot"
          }, 
          {
            "offset": 64, 
            "datatype": "dword", 
            "name": "nsects"
          }, 
          {
            "offset": 68, 
            "datatype": "dword", 
            "name": "flags"
          }
        ], 
        "name": "segment_command"
      }, 
      {
        "length": 16, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "qword", 
            "name": "version"
          }
        ], 
        "name": "source_version_command"
      }, 
      {
        "length": 24, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "dword", 
            "name": "symoff"
          }, 
          {
            "offset": 12, 
            "datatype": "dword", 
            "name": "nsyms"
          }, 
          {
            "offset": 16, 
            "datatype": "dword", 
            "name": "stroff"
          }, 
          {
            "offset": 20, 
            "datatype": "dword", 
            "name": "strsize"
          }
        ], 
        "name": "symtab_command"
      }, 
      {
        "length": 24, 
        "members": [
          {
            "offset": 0, 
            "datatype": "dword", 
            "name": "cmd"
          }, 
          {
            "offset": 4, 
            "datatype": "dword", 
            "name": "cmdsize"
          }, 
          {
            "offset": 8, 
            "datatype": "byte[16]", 
            "name": "uuid"
          }
        ], 
        "name": "uuid_command"
      }
    ], 
    "function_definitions": [], 
    "enums": []
  }
}